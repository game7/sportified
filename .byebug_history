continue
self.tags.split('||')
Post.tagged_with(['slider']).count
ActsAsTaggableOn::Tag.first
Post.tagged_with(self.tags.split('||')).count
ActsAsTaggableOn::Tag.all.each{|t| puts t}
Tags.all.each{|t| puts t}
Post.tagged_with(self.tags.split('||')).count
Post.tagged_with(self.tags.split('||').count
self.tags.split('||')
self.tags
continue
next
self.tags.to_a
self.tags
self.post_count
self.options
continue
self.post_count
self.tags
self.options
self.shuffle
continue
continuie
continue
!!self.shuffle
(self.shuffle)
self.options['shuffle']
self.options.shuffle
self.shuffle
self.post_count
self.options
self.shuffle = false
self.shuffle.present?
self.shuffle.true?
self.shuffle
posts.shuffle
self.shuffle
posts
post
next
continue
session[:foo]
session
continue
session[:foo]
session
continue
exception
next
k
next
RACK_SESSION
step
next
step
session.exists?
session.require_or_load
session.methods
session.load
session.loaded?
session.load
session
session.to_hash
request.session
request
session
continue
Rails.env
continue
help
session['foo'] = 'bar'
session.inspect
session
next
step
continue
session
session[session_key]
session_key
[path, uri.fragment].compact.join('#')
[path, uri.fragment].compact
uri.fragment
ui.fragment
path
uri.fragment
path
next
nexzt
step
continue
next
session_key
next
location
next
step
help
continue
exception
next
request.url
request
