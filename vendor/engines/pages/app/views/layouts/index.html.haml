- javascript("jquery-ui.min.js")
:javascript
  $(function() {
    $(".layout").draggable({ 
      revert: "invalid", 
      helper: "clone",
      opacity: 0.7,
      connectToSortable: '#layouts'
    });
    $("#layouts").sortable({
      revert: "true",
      //handle: "div.chrome",
      opacity: 0.7,
      placeholder: "ui-state-highlight",
      update: function( event, ui ) {     
        old_id = ui.item.attr('id');
        var order = $(this).sortable('toArray');
        if(old_id.indexOf('new-layout') == 0) {
          $.ajax({
            type: 'post',
            data: 'format='+ui.item.attr("format")+'&position='+order.indexOf(old_id),
            dataType: 'json',
            async: false,
            success: function(msg){
              $('#' + old_id).attr('id', 'layout_'+msg['_id']);
            },
            url: '#{page_layouts_path(@page)}'
          });
        }
        $.ajax({
          type: 'post',
          data: $('#layouts').sortable('serialize') + '&id=#{@page.id}',
          dataType: 'json',
          success: function(msg){
            alert('done');
          },
          url: '#{position_page_layouts_path(@page)}'
        });     

      }
    });

  });

- title "#{ @page.title } - Layout"

- content_for :sidebar do
  %ul
    %li #{link_to 'Show this Page', page_friendly_path(@page.path)}
    %li #{link_to 'Edit Page Settings', edit_page_path(@page)}
  .formats
  - Layout.formats.each_with_index do |f, i|
    = render :partial => "wireframe", :locals => { :id => "new-layout-#{i}", :layout => Layout.new(:format => f), :height => 20 }
  .clear

#layouts
  - @page.layouts.asc(:position).each do |layout|
    = render :partial => "wireframe", :locals => { :layout => layout, :height => 20 }



#dialog-modal

:css
  .formats { width: 100px; }
  #layouts { min-height: 200px; width: 100%; border: 1px dashed gray; }
  .layout { clear: both; padding: 0;}
  .blocks { min-height: 100px; margin: -1px; border: 1px dashed gray; }
  .ui-state-highlight { height: 1.5em; line-height: 1.2em; }

