- javascript("jquery-ui.min.js")
- javascript("jcrop/jquery.Jcrop.min.js")
- stylesheet("compiled/jcrop.css")

= semantic_form_for [:admin, @team], :html => {:multipart => true} do |f|
  = f.inputs 'General Info' do
    = f.input :division_id, :as => :select, :collection => @divisions
    = f.input :season_id, :as => :select, :collection => @seasons
    = f.input :name
    = f.input :short_name
    = f.input :club_id, :as => :select, :collection => @clubs
    = f.input :show_in_standings, :as => :boolean
  = f.inputs 'Logo' do
    - if @team.logo?
      %li
        = image_tag @team.logo.url.to_s, { :id => 'target' }
        #thumb-frame
          = image_tag @team.logo.url.to_s, { :id => 'thumb' }
        #tiny-frame
          = image_tag @team.logo.url.to_s, { :id => 'tiny' }
        #micro-frame
          = image_tag @team.logo.url.to_s, { :id => 'micro' }
        .clear
    = f.input :logo, :as => :file
    = f.input :logo_cache, :as => :hidden
  - if @team.logo?
    = f.inputs 'Thumbnail' do
      %li
        #banner
          #banner_thumb
            #draggable
              = image_tag @team.logo.thumb.url.to_s
          #banner_name #{@team.name}
          #banner_links
            = link_to 'Link', 'javascript: void;'
            = " | "
            = link_to 'Link', 'javascript: void;'
            = " | "
            = link_to 'Link', 'javascript: void;'
          .clear
        #image_sizer
          = link_to 'Image Bigger', '#', :id => 'bigger'
          = " | "
          = link_to 'Image Smaller', '#', :id => 'smaller'
      = f.input :primary_color
      = f.input :accent_color
      = f.input :text_color
      = f.input :link_color 
      = f.input :thumb_color
      = f.input :crop_x, :as => :hidden
      = f.input :crop_y, :as => :hidden
      = f.input :crop_w, :as => :hidden
      = f.input :crop_h, :as => :hidden
  = f.buttons do
    = f.commit_button
    %li #{ link_to 'Cancel', session[:return_to] }

:css
  #thumb-frame, #tiny-frame, #micro-frame { width: 100px; height:100px; overflow:hidden; float: left; margin-right: 5px; margin-top: 5px;} }
  #thumb-frame { width: 100px; height: 100px}
  #tiny-frame { width: 50px; height: 50px}
  #micro-frame { width: 25px; height: 25px}

  #image_sizer { font-size: 12px; }
  #banner_thumb { float: left; width: 50px; height: 50px; border: 1px solid gray; overflow: hidden; margin: 4px; }
  #banner_name { float: left; margin: 4px; font-size: 45px; line-height: 50px; font-weight: bold; font-style: italic; }
  #banner_links { float: right; margin: 4px 8px; font-size: 12px; }

  #banner { border: 2px solid #{@team.accent_color}; background-color: #{@team.primary_color} }
  #banner_thumb { border: 1px solid #{@team.accent_color}; }
  #banner_name { color: #{@team.text_color}; }  
  #banner_links { color: #{@team.text_color}; }
  #banner_links a:link, .links a:visited, .links a:active { color: #{@team.link_color}; }
  #banner_links a:hover { color: #{@team.text_color}; }
- content_for :javascript do
  :javascript
    
    jQuery(function($){

      // Create variables (in this scope) to hold the API and image size
      var jcrop_api, boundx, boundy;
      
      $('#target').Jcrop({
        onChange: updatePreview,
        onSelect: updatePreview,
        minSize: 100,
        maxSize: 200,
        aspectRatio: 1
      },function(){
        // Use the API to get the real image size
        var bounds = this.getBounds();
        boundx = bounds[0];
        boundy = bounds[1];
        // Store the API in the jcrop_api variable
        jcrop_api = this;
        var x = #{@team.crop_x};
        var y = #{@team.crop_y};
        var w = #{@team.crop_w};
        var h = #{@team.crop_h};
        jcrop_api.setSelect([x,y,x+w,y+h]);      
      });     

      function updatePreview(c)
      {
        if (parseInt(c.w) > 0)
        {
          var rx = 100 / c.w;
          var ry = 100 / c.h;

          $('#thumb').css({
            width: Math.round(100 / c.w * boundx) + 'px',
            height: Math.round(100 / c.w * boundy) + 'px',
            marginLeft: '-' + Math.round(100 / c.w * c.x) + 'px',
            marginTop: '-' + Math.round(100 / c.w * c.y) + 'px'
          });
          $('#tiny').css({
            width: Math.round(50 / c.w * boundx) + 'px',
            height: Math.round(50 / c.w * boundy) + 'px',
            marginLeft: '-' + Math.round(50 / c.w * c.x) + 'px',
            marginTop: '-' + Math.round(50 / c.w * c.y) + 'px'
          });
          $('#micro').css({
            width: Math.round(25 / c.w * boundx) + 'px',
            height: Math.round(25 / c.w * boundy) + 'px',
            marginLeft: '-' + Math.round(25 / c.w * c.x) + 'px',
            marginTop: '-' + Math.round(25 / c.w * c.y) + 'px'
          });
          $('#team_crop_h').val(c.h);
          $('#team_crop_w').val(c.w);
          $('#team_crop_y').val(c.y);
          $('#team_crop_x').val(c.x);
        }
      };

    });

    function resize_thumb(i) {
      thumb = $('#draggable img');
      thumb.width(thumb.width() + i);
      thumb.css('height', 'auto')
      $('#team_thumb_height').val(thumb.height());
      $('#team_thumb_width').val(thumb.width());
    }
    function set_starting_thumb_size() {
      height = #{@team.crop_h};
      width = #{@team.crop_w};
      thumb = $('#draggable img');
      if (height > 0) { 
        thumb.css('height', height)
      }
      else {
        $('#team_thumb_height').val(thumb.height());
      }
      if (width > 0) { 
        thumb.css('width', width) 
      }
      else {
        $('#team_thumb_height').val(thumb.height());      
      }
    }
    $(function() {
      $( "#bigger" ).click(function(){
        resize_thumb(5);
        return false;
      });
      $( "#smaller" ).click(function(){
        resize_thumb(-5);
        return false;
      });
      $( "#draggable" ).draggable({
        stop: function(event, ui) {
          $('#team_thumb_top').val(ui.position.top);
          $('#team_thumb_left').val(ui.position.left);
        }
      });
      $( "#team_thumb_color" ).change(function(){
        $( "#banner_thumb" ).css('background-color', $(this).val());
      });
      $( "#frame").css('background-color', '#{@team.thumb_color}');
      $( "#draggable" ).css('top', #{@team.crop_y});
      $( "#draggable" ).css('left', #{@team.crop_x});
      set_starting_thumb_size();
      $( "#team_primary_color").change(function(){
        $("#banner").css('background-color', $(this).val());
      });
      $( "#team_accent_color").change(function(){
        $("#banner").css('border-color', $(this).val());
        $("#banner_thumb").css('border-color', $(this).val());      
      });
      $( "#team_text_color").change(function(){
        $("#banner_name").css('color', $(this).val());  
        $("#banner_links").css('color', $(this).val()); 
      });  
      $( "#team_link_color").change(function(){
        $("#banner_links a").css('color', $(this).val()); 
        $("#banner_links a:link").css('color', $(this).val()); 
        $("#banner_links a:hover").css('color', $(this).val()); 
      }); 
    });

