// DO NOT MODIFY
//
// This file was automatically generated by Typescript.generate_models.  Please do not attempt to resolve
// merge conflicts manually but instead run `rails ts:generate_models` after resolving all conflicts within
// model files
//
/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any */
// this is a special class that provides access to an
// attachment but also allows setting attachment
// via a File or signed_id (string)
namespace ActiveStorage {
  namespace Attached {
    type One = string | File | {
      attachment?: ActiveStorage.Attachment;
    }
  }
}
// this is a special class that provides access to the
// attachments but also allows setting attachments
// via an array of Files or signed_ids (string)
namespace ActiveStorage {
  namespace Attached {
    type Many = string[] | File[] | {
      attachments?: ActiveStorage.Attachment[]
      blobs?: ActiveStorage.Blob[];
    }
  }
}
namespace ActionMailbox {
  interface InboundEmail {
  }
}
namespace ActionText {
  interface EncryptedRichText {
  }
}
namespace ActionText {
  interface RichText {
  }
}
namespace ActiveRecord {
  interface InternalMetadata {
    key: string;
    value: string | null;
    created_at: string;
    updated_at: string;
  }
}
namespace ActiveRecord {
  interface SchemaMigration {
    version: string;
  }
}
namespace ActiveStorage {
  interface Attachment {
    id: number;
    name: string;
    record_type: string;
    record_id: number;
    blob_id: number;
    created_at: string;
    blob?: ActiveStorage.Blob;
  }
}
namespace ActiveStorage {
  interface Blob {
    id: number;
    key: string;
    filename: string;
    content_type: string | null;
    metadata: unknown /* ActiveRecord::Type::Serialized */ | null;
    byte_size: number;
    checksum: string;
    created_at: string;
    service_name: string;
    preview_image?: ActiveStorage.Attached.One;
    variant_records?: ActiveStorage.VariantRecord[];
    attachments?: ActiveStorage.Attachment[];
    preview_image_attachment?: ActiveStorage.Attachment;
    preview_image_blob?: ActiveStorage.Blob;
  }
}
namespace ActiveStorage {
  namespace PostgreSQL {
    interface File {
      id: number;
      oid: number | null;
      key: string | null;
    }
  }
}
namespace ActiveStorage {
  interface VariantRecord {
    id: number;
    blob_id: number;
    variation_digest: string;
    image?: ActiveStorage.Attached.One;
    image_attachment?: ActiveStorage.Attachment;
    image_blob?: ActiveStorage.Blob;
    blob?: ActiveStorage.Blob;
  }
}
namespace ActsAsTaggableOn {
  interface Tag {
    id: number;
    name: string | null;
    taggings_count: number | null;
    color: string | null;
    taggings?: ActsAsTaggableOn.Tagging[];
  }
}
namespace ActsAsTaggableOn {
  interface Tagging {
    id: number;
    tag_id: number | null;
    taggable_id: number | null;
    taggable_type: string | null;
    tagger_id: number | null;
    tagger_type: string | null;
    context: string | null;
    created_at: string | null;
    tag?: ActsAsTaggableOn.Tag;
  }
}
namespace Ahoy {
  interface Event {
    id: number;
    visit_id: number | null;
    user_id: number | null;
    name: string | null;
    properties: unknown /* ActiveRecord::ConnectionAdapters::PostgreSQL::OID::Jsonb */ | null;
    time: string | null;
    tenant_id: number | null;
    tenant?: App.Tenant;
    visit?: Ahoy.Visit;
    user?: App.User;
  }
}
namespace Ahoy {
  interface Visit {
    id: number;
    visit_token: string | null;
    visitor_token: string | null;
    user_id: number | null;
    ip: string | null;
    user_agent: string | null;
    referrer: string | null;
    referring_domain: string | null;
    landing_page: string | null;
    browser: string | null;
    os: string | null;
    device_type: string | null;
    country: string | null;
    region: string | null;
    city: string | null;
    latitude: number | null;
    longitude: number | null;
    utm_source: string | null;
    utm_medium: string | null;
    utm_term: string | null;
    utm_content: string | null;
    utm_campaign: string | null;
    app_version: string | null;
    os_version: string | null;
    platform: string | null;
    started_at: string | null;
    tenant_id: number | null;
    events?: Ahoy.Event[];
    tenant?: App.Tenant;
    user?: App.User;
  }
}
namespace App {
  interface Asset {
  }
}
namespace Audited {
  interface Audit {
    id: number;
    auditable_id: number | null;
    auditable_type: string | null;
    associated_id: number | null;
    associated_type: string | null;
    user_id: number | null;
    user_type: string | null;
    username: string | null;
    action: string | null;
    audited_changes: unknown /* ActiveRecord::Type::Serialized */ | null;
    version: number | null;
    comment: string | null;
    remote_address: string | null;
    request_uuid: string | null;
    created_at: string | null;
  }
}
namespace Blazer {
  interface Audit {
    id: number;
    user_id: number | null;
    query_id: number | null;
    statement: string | null;
    data_source: string | null;
    created_at: string | null;
    user?: App.User;
    query?: Blazer.Query;
  }
}
namespace Blazer {
  interface Check {
    id: number;
    creator_id: number | null;
    query_id: number | null;
    state: string | null;
    schedule: string | null;
    emails: string | null;
    slack_channels: string | null;
    check_type: string | null;
    message: string | null;
    last_run_at: string | null;
    created_at: string;
    updated_at: string;
    creator?: App.User;
    query?: Blazer.Query;
  }
}
namespace Blazer {
  interface Dashboard {
    id: number;
    creator_id: number | null;
    name: string | null;
    created_at: string;
    updated_at: string;
    dashboard_queries?: Blazer.DashboardQuery[];
    queries?: Blazer.Query[];
    creator?: App.User;
  }
}
namespace Blazer {
  interface DashboardQuery {
    id: number;
    dashboard_id: number | null;
    query_id: number | null;
    position: number | null;
    created_at: string;
    updated_at: string;
    dashboard?: Blazer.Dashboard;
    query?: Blazer.Query;
  }
}
namespace Blazer {
  interface Query {
    id: number;
    creator_id: number | null;
    name: string | null;
    description: string | null;
    statement: string | null;
    data_source: string | null;
    status: string | null;
    created_at: string;
    updated_at: string;
    checks?: Blazer.Check[];
    dashboard_queries?: Blazer.DashboardQuery[];
    dashboards?: Blazer.Dashboard[];
    audits?: Blazer.Audit[];
    creator?: App.User;
  }
}
namespace Blazer {
  interface Upload {
  }
}
namespace App {
  interface Block {
    id: number;
    page_id: number | null;
    type: string | null;
    section_id: number | null;
    column: number | null;
    position: number | null;
    options: Record<string, unknown> | null;
    created_at: string | null;
    updated_at: string | null;
    file: string | null;
    page?: App.Page;
  }
}
namespace Blocks {
  interface Carousel {
    id: number;
    page_id: number | null;
    type: string | null;
    section_id: number | null;
    column: number | null;
    position: number | null;
    options: Record<string, unknown> | null;
    created_at: string | null;
    updated_at: string | null;
    file: string | null;
    page?: App.Page;
  }
}
namespace Blocks {
  interface Contact {
    id: number;
    page_id: number | null;
    type: string | null;
    section_id: number | null;
    column: number | null;
    position: number | null;
    options: Record<string, unknown> | null;
    created_at: string | null;
    updated_at: string | null;
    file: string | null;
    page?: App.Page;
  }
}
namespace Blocks {
  interface Divider {
    id: number;
    page_id: number | null;
    type: string | null;
    section_id: number | null;
    column: number | null;
    position: number | null;
    options: Record<string, unknown> | null;
    created_at: string | null;
    updated_at: string | null;
    file: string | null;
    page?: App.Page;
  }
}
namespace Blocks {
  interface Document {
    id: number;
    page_id: number | null;
    type: string | null;
    section_id: number | null;
    column: number | null;
    position: number | null;
    options: Record<string, unknown> | null;
    created_at: string | null;
    updated_at: string | null;
    file: string | null;
    page?: App.Page;
  }
}
namespace Blocks {
  interface EventFeed {
    id: number;
    page_id: number | null;
    type: string | null;
    section_id: number | null;
    column: number | null;
    position: number | null;
    options: Record<string, unknown> | null;
    created_at: string | null;
    updated_at: string | null;
    file: string | null;
    page?: App.Page;
  }
}
namespace Blocks {
  interface Feed {
    id: number;
    page_id: number | null;
    type: string | null;
    section_id: number | null;
    column: number | null;
    position: number | null;
    options: Record<string, unknown> | null;
    created_at: string | null;
    updated_at: string | null;
    file: string | null;
    page?: App.Page;
  }
}
namespace Blocks {
  interface Image {
    id: number;
    page_id: number | null;
    type: string | null;
    section_id: number | null;
    column: number | null;
    position: number | null;
    options: Record<string, unknown> | null;
    created_at: string | null;
    updated_at: string | null;
    file: string | null;
    page?: App.Page;
  }
}
namespace Blocks {
  interface Markup {
    id: number;
    page_id: number | null;
    type: string | null;
    section_id: number | null;
    column: number | null;
    position: number | null;
    options: Record<string, unknown> | null;
    created_at: string | null;
    updated_at: string | null;
    file: string | null;
    page?: App.Page;
  }
}
namespace Blocks {
  interface Text {
    id: number;
    page_id: number | null;
    type: string | null;
    section_id: number | null;
    column: number | null;
    position: number | null;
    options: Record<string, unknown> | null;
    created_at: string | null;
    updated_at: string | null;
    file: string | null;
    page?: App.Page;
  }
}
namespace Blocks {
  interface Twitter {
    id: number;
    page_id: number | null;
    type: string | null;
    section_id: number | null;
    column: number | null;
    position: number | null;
    options: Record<string, unknown> | null;
    created_at: string | null;
    updated_at: string | null;
    file: string | null;
    page?: App.Page;
  }
}
namespace App {
  interface Chromecast {
    id: number;
    name: string | null;
    tenant_id: number | null;
    location_id: number | null;
    playing_surface_id: number | null;
    created_at: string;
    updated_at: string;
    refreshed_at: string | null;
    tenant?: App.Tenant;
    location?: App.Location;
    playing_surface?: App.PlayingSurface;
  }
}
namespace App {
  interface Club {
  }
}
namespace App {
  interface Document {
  }
}
namespace App {
  interface Event {
    id: number;
    tenant_id: number | null;
    division_id: number | null;
    season_id: number | null;
    location_id: number | null;
    type: string | null;
    starts_on: string | null;
    ends_on: string | null;
    duration: number | null;
    all_day: boolean | null;
    summary: string | null;
    description: string | null;
    created_at: string | null;
    updated_at: string | null;
    home_team_id: number | null;
    away_team_id: number | null;
    statsheet_id: number | null;
    statsheet_type: string | null;
    home_team_score: number | null;
    away_team_score: number | null;
    home_team_name: string | null;
    away_team_name: string | null;
    home_team_custom_name: boolean | null;
    away_team_custom_name: boolean | null;
    text_before: string | null;
    text_after: string | null;
    result: string | null;
    completion: string | null;
    exclude_from_team_records: boolean | null;
    playing_surface_id: number | null;
    home_team_locker_room_id: number | null;
    away_team_locker_room_id: number | null;
    program_id: number | null;
    page_id: number | null;
    private: boolean;
    recurrence_id: number | null;
    tag_list: string | null;
    taggings?: ActsAsTaggableOn.Tagging[];
    base_tags?: ActsAsTaggableOn.Tag[];
    tag_taggings?: ActsAsTaggableOn.Tagging[];
    tags?: ActsAsTaggableOn.Tag[];
    audits?: Audited.Audit[];
    product?: App.Product;
    tenant?: App.Tenant;
    program?: App.Program;
    page?: App.Page;
    location?: App.Location;
    home_team_locker_room?: App.LockerRoom;
    away_team_locker_room?: App.LockerRoom;
  }
}
namespace App {
  interface Facility {
    id: number;
    type: string | null;
    name: string | null;
    tenant_id: number | null;
    location_id: number | null;
    created_at: string;
    updated_at: string;
    auto_assign: string | null;
    tenant?: App.Tenant;
    location?: App.Location;
  }
}
namespace App {
  interface Form {
    id: number;
    tenant_id: number | null;
    registration_id: number | null;
    template_id: number | null;
    data: Record<string, unknown> | null;
    created_at: string;
    updated_at: string;
    completed: boolean;
    elements?: App.FormElement[];
    tenant?: App.Tenant;
    registration?: App.Registration;
    template?: App.FormTemplate;
  }
}
namespace App {
  interface FormElement {
    id: number;
    tenant_id: number | null;
    template_id: number | null;
    type: string | null;
    name: string | null;
    position: number | null;
    properties: Record<string, unknown> | null;
    created_at: string;
    updated_at: string;
    required: boolean | null;
    hint: string | null;
    tenant?: App.Tenant;
    template?: App.FormTemplate;
  }
}
namespace FormElements {
  interface Address {
    id: number;
    tenant_id: number | null;
    template_id: number | null;
    type: string | null;
    name: string | null;
    position: number | null;
    properties: Record<string, unknown> | null;
    created_at: string;
    updated_at: string;
    required: boolean | null;
    hint: string | null;
    tenant?: App.Tenant;
    template?: App.FormTemplate;
  }
}
namespace FormElements {
  interface Agreement {
    id: number;
    tenant_id: number | null;
    template_id: number | null;
    type: string | null;
    name: string | null;
    position: number | null;
    properties: Record<string, unknown> | null;
    created_at: string;
    updated_at: string;
    required: boolean | null;
    hint: string | null;
    terms: string | null;
    tenant?: App.Tenant;
    template?: App.FormTemplate;
  }
}
namespace FormElements {
  interface Choice {
    id: number;
    tenant_id: number | null;
    template_id: number | null;
    type: string | null;
    name: string | null;
    position: number | null;
    properties: Record<string, unknown> | null;
    created_at: string;
    updated_at: string;
    required: boolean | null;
    hint: string | null;
    options: string | null;
    allow_multiple: boolean | null;
    tenant?: App.Tenant;
    template?: App.FormTemplate;
  }
}
namespace FormElements {
  interface Contact {
    id: number;
    tenant_id: number | null;
    template_id: number | null;
    type: string | null;
    name: string | null;
    position: number | null;
    properties: Record<string, unknown> | null;
    created_at: string;
    updated_at: string;
    required: boolean | null;
    hint: string | null;
    tenant?: App.Tenant;
    template?: App.FormTemplate;
  }
}
namespace FormElements {
  interface Email {
    id: number;
    tenant_id: number | null;
    template_id: number | null;
    type: string | null;
    name: string | null;
    position: number | null;
    properties: Record<string, unknown> | null;
    created_at: string;
    updated_at: string;
    required: boolean | null;
    hint: string | null;
    tenant?: App.Tenant;
    template?: App.FormTemplate;
  }
}
namespace FormElements {
  interface Height {
    id: number;
    tenant_id: number | null;
    template_id: number | null;
    type: string | null;
    name: string | null;
    position: number | null;
    properties: Record<string, unknown> | null;
    created_at: string;
    updated_at: string;
    required: boolean | null;
    hint: string | null;
    tenant?: App.Tenant;
    template?: App.FormTemplate;
  }
}
namespace FormElements {
  interface Name {
    id: number;
    tenant_id: number | null;
    template_id: number | null;
    type: string | null;
    name: string | null;
    position: number | null;
    properties: Record<string, unknown> | null;
    created_at: string;
    updated_at: string;
    required: boolean | null;
    hint: string | null;
    tenant?: App.Tenant;
    template?: App.FormTemplate;
  }
}
namespace FormElements {
  interface Note {
    id: number;
    tenant_id: number | null;
    template_id: number | null;
    type: string | null;
    name: string | null;
    position: number | null;
    properties: Record<string, unknown> | null;
    created_at: string;
    updated_at: string;
    required: boolean | null;
    hint: string | null;
    rows: number | null;
    tenant?: App.Tenant;
    template?: App.FormTemplate;
  }
}
namespace FormElements {
  interface Text {
    id: number;
    tenant_id: number | null;
    template_id: number | null;
    type: string | null;
    name: string | null;
    position: number | null;
    properties: Record<string, unknown> | null;
    created_at: string;
    updated_at: string;
    required: boolean | null;
    hint: string | null;
    pattern: string | null;
    message: string | null;
    tenant?: App.Tenant;
    template?: App.FormTemplate;
  }
}
namespace FormElements {
  interface Weight {
    id: number;
    tenant_id: number | null;
    template_id: number | null;
    type: string | null;
    name: string | null;
    position: number | null;
    properties: Record<string, unknown> | null;
    created_at: string;
    updated_at: string;
    required: boolean | null;
    hint: string | null;
    tenant?: App.Tenant;
    template?: App.FormTemplate;
  }
}
namespace App {
  interface FormPacket {
    id: number;
    tenant_id: number | null;
    name: string | null;
    created_at: string;
    updated_at: string;
    variants?: App.Variant[];
    templates?: App.FormTemplate[];
    tenant?: App.Tenant;
  }
}
namespace App {
  interface FormTemplate {
    id: number;
    tenant_id: number | null;
    packet_id: number | null;
    name: string | null;
    position: number | null;
    created_at: string;
    updated_at: string;
    elements?: App.FormElement[];
    forms?: App.Form[];
    tenant?: App.Tenant;
    packet?: App.FormPacket;
  }
}
namespace General {
  interface Event {
    id: number;
    tenant_id: number | null;
    division_id: number | null;
    season_id: number | null;
    location_id: number | null;
    type: string | null;
    starts_on: string | null;
    ends_on: string | null;
    duration: number | null;
    all_day: boolean | null;
    summary: string | null;
    description: string | null;
    created_at: string | null;
    updated_at: string | null;
    home_team_id: number | null;
    away_team_id: number | null;
    statsheet_id: number | null;
    statsheet_type: string | null;
    home_team_score: number | null;
    away_team_score: number | null;
    home_team_name: string | null;
    away_team_name: string | null;
    home_team_custom_name: boolean | null;
    away_team_custom_name: boolean | null;
    text_before: string | null;
    text_after: string | null;
    result: string | null;
    completion: string | null;
    exclude_from_team_records: boolean | null;
    playing_surface_id: number | null;
    home_team_locker_room_id: number | null;
    away_team_locker_room_id: number | null;
    program_id: number | null;
    page_id: number | null;
    private: boolean;
    recurrence_id: number | null;
    tag_list: string | null;
    taggings?: ActsAsTaggableOn.Tagging[];
    base_tags?: ActsAsTaggableOn.Tag[];
    tag_taggings?: ActsAsTaggableOn.Tagging[];
    tags?: ActsAsTaggableOn.Tag[];
    audits?: Audited.Audit[];
    product?: App.Product;
    tenant?: App.Tenant;
    program?: App.Program;
    page?: App.Page;
    location?: App.Location;
    home_team_locker_room?: App.LockerRoom;
    away_team_locker_room?: App.LockerRoom;
    recurrence?: App.Recurrence;
  }
}
namespace App {
  interface HABTMDivisions {
  }
}
namespace App {
  interface HABTMSeasons {
  }
}
namespace App {
  interface HABTMTenants {
  }
}
namespace Hockey {
  interface Event {
  }
}
namespace Hockey {
  interface Goal {
    id: number;
    tenant_id: number | null;
    statsheet_id: number | null;
    period: string | null;
    minute: number | null;
    second: number | null;
    team_id: number | null;
    scored_by_id: number | null;
    scored_on_id: number | null;
    assisted_by_id: number | null;
    also_assisted_by_id: number | null;
    strength: string | null;
    created_at: string | null;
    updated_at: string | null;
    scored_by_number: string | null;
    assisted_by_number: string | null;
    also_assisted_by_number: string | null;
    tenant?: App.Tenant;
    statsheet?: Hockey.Statsheet;
    team?: League.Team;
    scored_by?: Hockey.Skater.Result;
    scored_on?: Hockey.Goaltender.Result;
    assisted_by?: Hockey.Skater.Result;
    also_assisted_by?: Hockey.Skater.Result;
  }
}
namespace Hockey {
  interface Goaltender {
    id: number;
    type: string | null;
    tenant_id: number | null;
    team_id: number | null;
    player_id: number | null;
    statsheet_id: number | null;
    games_played: number | null;
    minutes_played: number | null;
    shots_against: number | null;
    goals_against: number | null;
    saves: number | null;
    save_percentage: number | null;
    goals_against_average: number | null;
    shutouts: number | null;
    shootout_attempts: number | null;
    shootout_goals: number | null;
    shootout_save_percentage: number | null;
    regulation_wins: number | null;
    regulation_losses: number | null;
    overtime_wins: number | null;
    overtime_losses: number | null;
    shootout_wins: number | null;
    shootout_losses: number | null;
    total_wins: number | null;
    total_losses: number | null;
    created_at: string | null;
    updated_at: string | null;
    jersey_number: string | null;
    first_name: string | null;
    last_name: string | null;
    tenant?: App.Tenant;
    player?: App.Player;
  }
}
namespace Hockey {
  namespace Goaltender {
    interface Record {
      id: number;
      type: string | null;
      tenant_id: number | null;
      team_id: number | null;
      player_id: number | null;
      statsheet_id: number | null;
      games_played: number | null;
      minutes_played: number | null;
      shots_against: number | null;
      goals_against: number | null;
      saves: number | null;
      save_percentage: number | null;
      goals_against_average: number | null;
      shutouts: number | null;
      shootout_attempts: number | null;
      shootout_goals: number | null;
      shootout_save_percentage: number | null;
      regulation_wins: number | null;
      regulation_losses: number | null;
      overtime_wins: number | null;
      overtime_losses: number | null;
      shootout_wins: number | null;
      shootout_losses: number | null;
      total_wins: number | null;
      total_losses: number | null;
      created_at: string | null;
      updated_at: string | null;
      jersey_number: string | null;
      first_name: string | null;
      last_name: string | null;
      team?: League.Team;
      tenant?: App.Tenant;
      player?: App.Player;
    }
  }
}
namespace Hockey {
  namespace Goaltender {
    interface Result {
      id: number;
      type: string | null;
      tenant_id: number | null;
      team_id: number | null;
      player_id: number | null;
      statsheet_id: number | null;
      games_played: number | null;
      minutes_played: number | null;
      shots_against: number | null;
      goals_against: number | null;
      saves: number | null;
      save_percentage: number | null;
      goals_against_average: number | null;
      shutouts: number | null;
      shootout_attempts: number | null;
      shootout_goals: number | null;
      shootout_save_percentage: number | null;
      regulation_wins: number | null;
      regulation_losses: number | null;
      overtime_wins: number | null;
      overtime_losses: number | null;
      shootout_wins: number | null;
      shootout_losses: number | null;
      total_wins: number | null;
      total_losses: number | null;
      created_at: string | null;
      updated_at: string | null;
      jersey_number: string | null;
      first_name: string | null;
      last_name: string | null;
      game?: League.Game;
      tenant?: App.Tenant;
      player?: App.Player;
      statsheet?: Hockey.Statsheet;
      team?: League.Team;
    }
  }
}
namespace Hockey {
  interface Penalty {
    id: number;
    tenant_id: number | null;
    statsheet_id: number | null;
    period: string | null;
    minute: number | null;
    second: number | null;
    team_id: number | null;
    committed_by_id: number | null;
    infraction: string | null;
    duration: number | null;
    severity: string | null;
    start_period: string | null;
    start_minute: number | null;
    start_second: number | null;
    end_period: string | null;
    end_minute: number | null;
    end_second: number | null;
    created_at: string | null;
    updated_at: string | null;
    committed_by_number: string | null;
    tenant?: App.Tenant;
    statsheet?: Hockey.Statsheet;
    team?: League.Team;
    committed_by?: Hockey.Skater.Result;
  }
}
namespace Hockey {
  interface Skater {
    id: number;
    type: string | null;
    tenant_id: number | null;
    team_id: number | null;
    player_id: number | null;
    statsheet_id: number | null;
    jersey_number: string | null;
    games_played: number | null;
    goals: number | null;
    assists: number | null;
    points: number | null;
    penalties: number | null;
    penalty_minutes: number | null;
    minor_penalties: number | null;
    major_penalties: number | null;
    misconduct_penalties: number | null;
    game_misconduct_penalties: number | null;
    hat_tricks: number | null;
    playmakers: number | null;
    gordie_howes: number | null;
    ejections: number | null;
    created_at: string | null;
    updated_at: string | null;
    first_name: string | null;
    last_name: string | null;
    tenant?: App.Tenant;
    player?: App.Player;
  }
}
namespace Hockey {
  namespace Skater {
    interface Record {
      id: number;
      type: string | null;
      tenant_id: number | null;
      team_id: number | null;
      player_id: number | null;
      statsheet_id: number | null;
      jersey_number: string | null;
      games_played: number | null;
      goals: number | null;
      assists: number | null;
      points: number | null;
      penalties: number | null;
      penalty_minutes: number | null;
      minor_penalties: number | null;
      major_penalties: number | null;
      misconduct_penalties: number | null;
      game_misconduct_penalties: number | null;
      hat_tricks: number | null;
      playmakers: number | null;
      gordie_howes: number | null;
      ejections: number | null;
      created_at: string | null;
      updated_at: string | null;
      first_name: string | null;
      last_name: string | null;
      tenant?: App.Tenant;
      player?: App.Player;
    }
  }
}
namespace Hockey {
  namespace Skater {
    interface Result {
      id: number;
      type: string | null;
      tenant_id: number | null;
      team_id: number | null;
      player_id: number | null;
      statsheet_id: number | null;
      jersey_number: string | null;
      games_played: number | null;
      goals: number | null;
      assists: number | null;
      points: number | null;
      penalties: number | null;
      penalty_minutes: number | null;
      minor_penalties: number | null;
      major_penalties: number | null;
      misconduct_penalties: number | null;
      game_misconduct_penalties: number | null;
      hat_tricks: number | null;
      playmakers: number | null;
      gordie_howes: number | null;
      ejections: number | null;
      created_at: string | null;
      updated_at: string | null;
      first_name: string | null;
      last_name: string | null;
      game?: League.Game;
      tenant?: App.Tenant;
      player?: App.Player;
      statsheet?: Hockey.Statsheet;
      team?: League.Team;
    }
  }
}
namespace Hockey {
  interface Statsheet {
    id: number;
    tenant_id: number | null;
    posted: boolean | null;
    away_score: number | null;
    home_score: number | null;
    latest_period: string | null;
    latest_minute: number | null;
    latest_second: number | null;
    min_1: number | null;
    min_2: number | null;
    min_3: number | null;
    min_ot: number | null;
    away_shots_1: number | null;
    away_shots_2: number | null;
    away_shots_3: number | null;
    away_shots_ot: number | null;
    home_shots_1: number | null;
    home_shots_2: number | null;
    home_shots_3: number | null;
    home_shots_ot: number | null;
    created_at: string | null;
    updated_at: string | null;
    skaters?: Hockey.Skater.Result[];
    goaltenders?: Hockey.Goaltender.Result[];
    goals?: Hockey.Goal[];
    penalties?: Hockey.Penalty[];
    game?: League.Game;
    home_team?: League.Team;
    away_team?: League.Team;
    tenant?: App.Tenant;
  }
}
namespace League {
  interface Division {
    id: number;
    name: string | null;
    slug: string | null;
    show_standings: boolean | null;
    show_players: boolean | null;
    show_statistics: boolean | null;
    standings_array: unknown /* ActiveRecord::ConnectionAdapters::PostgreSQL::OID::Array */ | null;
    tenant_id: number | null;
    created_at: string | null;
    updated_at: string | null;
    standings_schema_id: string | null;
    program_id: number | null;
    period_length: number | null;
    seasons?: League.Season[];
    teams?: League.Team[];
    events?: App.Event[];
    tenant?: App.Tenant;
    program?: League.Program;
  }
}
namespace League {
  interface Event {
    id: number;
    tenant_id: number | null;
    division_id: number | null;
    season_id: number | null;
    location_id: number | null;
    type: string | null;
    starts_on: string | null;
    ends_on: string | null;
    duration: number | null;
    all_day: boolean | null;
    summary: string | null;
    description: string | null;
    created_at: string | null;
    updated_at: string | null;
    home_team_id: number | null;
    away_team_id: number | null;
    statsheet_id: number | null;
    statsheet_type: string | null;
    home_team_score: number | null;
    away_team_score: number | null;
    home_team_name: string | null;
    away_team_name: string | null;
    home_team_custom_name: boolean | null;
    away_team_custom_name: boolean | null;
    text_before: string | null;
    text_after: string | null;
    result: string | null;
    completion: string | null;
    exclude_from_team_records: boolean | null;
    playing_surface_id: number | null;
    home_team_locker_room_id: number | null;
    away_team_locker_room_id: number | null;
    program_id: number | null;
    page_id: number | null;
    private: boolean;
    recurrence_id: number | null;
    tag_list: string | null;
    taggings?: ActsAsTaggableOn.Tagging[];
    base_tags?: ActsAsTaggableOn.Tag[];
    tag_taggings?: ActsAsTaggableOn.Tagging[];
    tags?: ActsAsTaggableOn.Tag[];
    audits?: Audited.Audit[];
    product?: App.Product;
    tenant?: App.Tenant;
    program?: App.Program;
    page?: App.Page;
    location?: App.Location;
    home_team_locker_room?: App.LockerRoom;
    away_team_locker_room?: App.LockerRoom;
    division?: League.Division;
    season?: League.Season;
  }
}
namespace League {
  interface Game {
    id: number;
    tenant_id: number | null;
    division_id: number | null;
    season_id: number | null;
    location_id: number | null;
    type: string | null;
    starts_on: string | null;
    ends_on: string | null;
    duration: number | null;
    all_day: boolean | null;
    summary: string | null;
    description: string | null;
    created_at: string | null;
    updated_at: string | null;
    home_team_id: number | null;
    away_team_id: number | null;
    statsheet_id: number | null;
    statsheet_type: string | null;
    home_team_score: number | null;
    away_team_score: number | null;
    home_team_name: string | null;
    away_team_name: string | null;
    home_team_custom_name: boolean | null;
    away_team_custom_name: boolean | null;
    text_before: string | null;
    text_after: string | null;
    result: unknown /* Enumerize::ActiveRecordSupport::Type */ | null;
    completion: unknown /* Enumerize::ActiveRecordSupport::Type */ | null;
    exclude_from_team_records: boolean | null;
    playing_surface_id: number | null;
    home_team_locker_room_id: number | null;
    away_team_locker_room_id: number | null;
    program_id: number | null;
    page_id: number | null;
    private: boolean;
    recurrence_id: number | null;
    tag_list: string | null;
    taggings?: ActsAsTaggableOn.Tagging[];
    base_tags?: ActsAsTaggableOn.Tag[];
    tag_taggings?: ActsAsTaggableOn.Tagging[];
    tags?: ActsAsTaggableOn.Tag[];
    audits?: Audited.Audit[];
    product?: App.Product;
    tenant?: App.Tenant;
    program?: App.Program;
    page?: App.Page;
    location?: App.Location;
    home_team_locker_room?: App.LockerRoom;
    away_team_locker_room?: App.LockerRoom;
    division?: League.Division;
    season?: League.Season;
    home_team?: League.Team;
    away_team?: League.Team;
    playing_surface?: App.PlayingSurface;
  }
}
namespace League {
  interface Practice {
    id: number;
    tenant_id: number | null;
    division_id: number | null;
    season_id: number | null;
    location_id: number | null;
    type: string | null;
    starts_on: string | null;
    ends_on: string | null;
    duration: number | null;
    all_day: boolean | null;
    summary: string | null;
    description: string | null;
    created_at: string | null;
    updated_at: string | null;
    home_team_id: number | null;
    away_team_id: number | null;
    statsheet_id: number | null;
    statsheet_type: string | null;
    home_team_score: number | null;
    away_team_score: number | null;
    home_team_name: string | null;
    away_team_name: string | null;
    home_team_custom_name: boolean | null;
    away_team_custom_name: boolean | null;
    text_before: string | null;
    text_after: string | null;
    result: string | null;
    completion: string | null;
    exclude_from_team_records: boolean | null;
    playing_surface_id: number | null;
    home_team_locker_room_id: number | null;
    away_team_locker_room_id: number | null;
    program_id: number | null;
    page_id: number | null;
    private: boolean;
    recurrence_id: number | null;
    tag_list: string | null;
    taggings?: ActsAsTaggableOn.Tagging[];
    base_tags?: ActsAsTaggableOn.Tag[];
    tag_taggings?: ActsAsTaggableOn.Tagging[];
    tags?: ActsAsTaggableOn.Tag[];
    audits?: Audited.Audit[];
    product?: App.Product;
    tenant?: App.Tenant;
    program?: App.Program;
    page?: App.Page;
    location?: App.Location;
    home_team_locker_room?: App.LockerRoom;
    away_team_locker_room?: App.LockerRoom;
    division?: League.Division;
    season?: League.Season;
    home_team?: League.Team;
    away_team?: League.Team;
    playing_surface?: App.PlayingSurface;
  }
}
namespace League {
  interface Program {
    id: number;
    tenant_id: number | null;
    type: string | null;
    name: string | null;
    description: string | null;
    created_at: string;
    updated_at: string;
    slug: string | null;
    seasons?: League.Season[];
    divisions?: League.Division[];
    events?: League.Event[];
    tenant?: App.Tenant;
  }
}
namespace League {
  interface Season {
    id: number;
    name: string | null;
    slug: string | null;
    starts_on: string | null;
    tenant_id: number | null;
    created_at: string | null;
    updated_at: string | null;
    program_id: number | null;
    divisions?: League.Division[];
    teams?: League.Team[];
    tenant?: App.Tenant;
    program?: League.Program;
  }
}
namespace League {
  interface Team {
    id: number;
    name: string | null;
    short_name: string | null;
    slug: string | null;
    show_in_standings: boolean | null;
    pool: string | null;
    seed: number | null;
    tenant_id: number | null;
    division_id: number | null;
    season_id: number | null;
    club_id: number | null;
    logo: string | null;
    primary_color: string | null;
    secondary_color: string | null;
    accent_color: string | null;
    main_colors: unknown /* ActiveRecord::ConnectionAdapters::PostgreSQL::OID::Array */ | null;
    custom_colors: boolean | null;
    crop_x: number | null;
    crop_y: number | null;
    crop_h: number | null;
    crop_w: number | null;
    created_at: string | null;
    updated_at: string | null;
    games_played: number | null;
    wins: number | null;
    losses: number | null;
    ties: number | null;
    overtime_wins: number | null;
    overtime_losses: number | null;
    shootout_wins: number | null;
    shootout_losses: number | null;
    forfeit_wins: number | null;
    forfeit_losses: number | null;
    points: number | null;
    percent: number | null;
    scored: number | null;
    allowed: number | null;
    margin: number | null;
    last_result: string | null;
    current_run: number | null;
    longest_win_streak: number | null;
    longest_loss_streak: number | null;
    players?: App.Player[];
    program?: League.Program;
    tenant?: App.Tenant;
    division?: League.Division;
    season?: League.Season;
    club?: App.Club;
  }
}
namespace App {
  interface Location {
    id: number;
    tenant_id: number | null;
    name: string | null;
    short_name: string | null;
    created_at: string | null;
    updated_at: string | null;
    deleted_at: string | null;
    color: string | null;
    facilities?: App.Facility[];
    playing_surfaces?: App.PlayingSurface[];
    locker_rooms?: App.LockerRoom[];
    screen_locations?: App.ScreenLocation[];
    tenant?: App.Tenant;
  }
}
namespace App {
  interface LockerRoom {
    id: number;
    type: string | null;
    name: string | null;
    tenant_id: number | null;
    location_id: number | null;
    created_at: string;
    updated_at: string;
    auto_assign: string | null;
    tenant?: App.Tenant;
    location?: App.Location;
  }
}
namespace App {
  interface Page {
    id: number;
    tenant_id: number | null;
    title: string | null;
    slug: string | null;
    url_path: string | null;
    meta_keywords: string | null;
    meta_description: string | null;
    link_url: string | null;
    show_in_menu: boolean | null;
    title_in_menu: string | null;
    skip_to_first_child: boolean | null;
    draft: boolean | null;
    ancestry: string | null;
    ancestry_depth: number | null;
    position: number | null;
    created_at: string | null;
    updated_at: string | null;
    content: string | null;
    sections?: App.Section[];
    blocks?: App.Block[];
    tenant?: App.Tenant;
  }
}
namespace Passwordless {
  interface Session {
    id: number;
    authenticatable_type: string | null;
    authenticatable_id: number | null;
    timeout_at: string;
    expires_at: string;
    claimed_at: string | null;
    user_agent: string;
    remote_addr: string;
    token: string;
    created_at: string;
    updated_at: string;
    tenant_id: number | null;
    tenant?: App.Tenant;
  }
}
namespace App {
  interface Player {
    id: number;
    tenant_id: number | null;
    team_id: number | null;
    first_name: string | null;
    last_name: string | null;
    jersey_number: string | null;
    birthdate: string | null;
    email: string | null;
    slug: string | null;
    created_at: string | null;
    updated_at: string | null;
    substitute: boolean | null;
    position: string | null;
    results?: Hockey.Skater.Result[];
    division?: League.Division;
    season?: League.Season;
    record?: Hockey.Skater.Record;
    tenant?: App.Tenant;
    team?: League.Team;
  }
}
namespace App {
  interface PlayingSurface {
    id: number;
    type: string | null;
    name: string | null;
    tenant_id: number | null;
    location_id: number | null;
    created_at: string;
    updated_at: string;
    auto_assign: string | null;
    tenant?: App.Tenant;
    location?: App.Location;
  }
}
namespace App {
  interface Post {
    id: number;
    tenant_id: number | null;
    title: string | null;
    summary: string | null;
    body: string | null;
    link_url: string | null;
    image: string | null;
    created_at: string | null;
    updated_at: string | null;
    tag_list: string | null;
    photo?: ActiveStorage.Attached.One;
    references?: ActiveStorage.Attached.Many;
    taggings?: ActsAsTaggableOn.Tagging[];
    base_tags?: ActsAsTaggableOn.Tag[];
    tag_taggings?: ActsAsTaggableOn.Tagging[];
    tags?: ActsAsTaggableOn.Tag[];
    references_attachments?: ActiveStorage.Attachment[];
    references_blobs?: ActiveStorage.Blob[];
    photo_attachment?: ActiveStorage.Attachment;
    photo_blob?: ActiveStorage.Blob;
    tenant?: App.Tenant;
  }
}
namespace App {
  interface Product {
    id: number;
    registrable_id: number | null;
    registrable_type: string | null;
    title: string | null;
    description: string | null;
    quantity_allowed: number | null;
    quantity_available: number | null;
    tenant_id: number | null;
    created_at: string;
    updated_at: string;
    active: boolean | null;
    summary: string | null;
    private: boolean | null;
    roster: boolean | null;
    private_token: string | null;
    image?: ActiveStorage.Attached.One;
    variants?: App.Variant[];
    registrations?: App.Registration[];
    pending_registrations?: App.Registration[];
    completed_registrations?: App.Registration[];
    cancelled_registrations?: App.Registration[];
    abandoned_registrations?: App.Registration[];
    image_attachment?: ActiveStorage.Attachment;
    image_blob?: ActiveStorage.Blob;
    tenant?: App.Tenant;
  }
}
namespace App {
  interface Program {
    id: number;
    tenant_id: number | null;
    type: string | null;
    name: string | null;
    description: string | null;
    created_at: string;
    updated_at: string;
    slug: string | null;
    events?: App.Event[];
    tenant?: App.Tenant;
  }
}
namespace App {
  interface Recurrence {
    id: number;
    monday: boolean | null;
    tuesday: boolean | null;
    wednesday: boolean | null;
    thursday: boolean | null;
    friday: boolean | null;
    saturday: boolean | null;
    sunday: boolean | null;
    ending: string | null;
    ends_on: string | null;
    occurrence_count: number | null;
    created_at: string;
    updated_at: string;
    events?: App.Event[];
  }
}
namespace App {
  interface Registration {
    id: number;
    tenant_id: number | null;
    user_id: number | null;
    variant_id: number | null;
    first_name: string | null;
    last_name: string | null;
    email: string | null;
    payment_id: string | null;
    created_at: string;
    updated_at: string;
    price: number | null;
    form_packet_id: number | null;
    confirmation_code: string | null;
    birthdate: string | null;
    session_id: string | null;
    payment_intent_id: string | null;
    uuid: string | null;
    completed_at: string | null;
    abandoned_at: string | null;
    cancelled_at: string | null;
    checked_in_at: string | null;
    voucher_id: number | null;
    forms?: App.Form[];
    product?: App.Product;
    voucher?: App.Voucher;
    tenant?: App.Tenant;
    variant?: App.Variant;
    user?: App.User;
  }
}
namespace App {
  interface Screen {
    id: number;
    tenant_id: number | null;
    name: string | null;
    device_key: string | null;
    location_id: number | null;
    playing_surface_id: number | null;
    refreshed_at: string | null;
    created_at: string;
    updated_at: string;
    screen_locations?: App.ScreenLocation[];
    locations?: App.Location[];
    tenant?: App.Tenant;
    location?: App.Location;
    playing_surface?: App.PlayingSurface;
  }
}
namespace App {
  interface ScreenLocation {
    id: number;
    screen_id: number;
    location_id: number;
    created_at: string;
    updated_at: string;
    screen?: App.Screen;
    location?: App.Location;
  }
}
namespace App {
  interface Section {
    id: number;
    page_id: number | null;
    pattern: string | null;
    position: number | null;
    created_at: string | null;
    updated_at: string | null;
    page?: App.Page;
  }
}
namespace App {
  interface StripeConnect {
    id: number;
    tenant_id: number | null;
    referrer: string | null;
    token: string | null;
    client: string | null;
    redirect: string | null;
    status: string | null;
    result: string | null;
    created_at: string;
    updated_at: string;
    tenant?: App.Tenant;
  }
}
namespace App {
  interface Tenant {
    id: number;
    name: string | null;
    slug: string | null;
    host: string | null;
    description: string | null;
    analytics_id: string | null;
    theme: string | null;
    twitter_id: string | null;
    facebook_id: string | null;
    instagram_id: string | null;
    foursquare_id: string | null;
    google_plus_id: string | null;
    created_at: string | null;
    updated_at: string | null;
    stripe_account_id: string | null;
    stripe_public_api_key: string | null;
    stripe_access_token: string | null;
    google_fonts: string | null;
    time_zone: string | null;
    address: string | null;
    stripe_client_id: string | null;
    stripe_private_key: string | null;
    stripe_public_key: string | null;
    style: string | null;
    assets?: ActiveStorage.Attached.Many;
    users?: App.User[];
    assets_attachments?: ActiveStorage.Attachment[];
    assets_blobs?: ActiveStorage.Blob[];
  }
}
namespace App {
  interface User {
    id: number;
    email: string;
    encrypted_password: string;
    reset_password_token: string | null;
    reset_password_sent_at: string | null;
    remember_created_at: string | null;
    sign_in_count: number;
    current_sign_in_at: string | null;
    last_sign_in_at: string | null;
    current_sign_in_ip: string | null;
    last_sign_in_ip: string | null;
    created_at: string | null;
    updated_at: string | null;
    confirmation_token: string | null;
    confirmed_at: string | null;
    confirmation_sent_at: string | null;
    first_name: string | null;
    last_name: string | null;
    stripe_customer_id: string | null;
    unconfirmed_email: string | null;
    tenant_id: number;
    admin: boolean | null;
    operations: boolean | null;
    passwordless_sessions?: Passwordless.Session[];
    tenants?: App.Tenant[];
    registrations?: App.Registration[];
    vouchers?: App.Voucher[];
    tenant?: App.Tenant;
  }
}
namespace App {
  interface Variant {
    id: number;
    product_id: number | null;
    tenant_id: number | null;
    title: string | null;
    description: string | null;
    price: number | null;
    quantity_allowed: number | null;
    created_at: string;
    updated_at: string;
    form_packet_id: number | null;
    display_order: number | null;
    hide_quantity_available: boolean | null;
    registrations?: App.Registration[];
    tenant?: App.Tenant;
    product?: App.Product;
    form_packet?: App.FormPacket;
  }
}
namespace App {
  interface Voucher {
    id: number;
    user_id: number | null;
    registration_id: number | null;
    amount: number | null;
    expires_at: string | null;
    cancelled_at: string | null;
    consumed_at: string | null;
    created_at: string;
    updated_at: string;
    quantity: number | null;
    user?: App.User;
    registration?: App.Registration;
  }
}
namespace Event {
  interface Registrable {
    id: number;
    starts_on: string;
    summary: string;
  }
}
namespace Registration {
  namespace Summarization {
    interface ByProduct {
      product_id: number;
      total_count: number;
      pending_count: number;
      cancelled_count: number;
      abandoned_count: number;
      completed_count: number;
      completed_value: number;
    }
  }
}
