- title 'Schedule'
- last_date = nil

- if current_user_is_admin?
  - content_for :actions do
    .ui.icon.top.left.dropdown.button
      = semantic_icon(:plus)
      Add
      .menu
        = link_to 'New Event', new_admin_league_event_path(:season_id => @season, :division_id => @division), class: :item
        = link_to 'New Game', new_admin_league_game_path(:season_id => @season, :division_id => @division), class: :item  


.ui.stackable.grid

  - if @show_tags
    .four.wide.column                      

  .wide.column{ class: @show_tags ? :twelve : :sixteen }

    - unless params[:tags]
      .ui.grid
        .wide.column{ class: @division ? :twelve : :sixteen }
          = render :partial => 'shared/select_date_range', :locals => { :start_date => @start_date, :end_date => @end_date, :prev_date => @prev_date, :next_date => @next_date, :range => @days_in_future + @days_in_past }
        - if @division
          .four.wide.column
            = select('team', :id, @team_options, {}, { :class => 'redirect_to ui fluid dropdown select', :style => 'margin: 0px 0 0 0;' })
    - if params[:tags]
      .paginator= paginate @events    
  
.ui.stackable.grid

  - if @show_tags
    .four.wide.column

      .ui.segments
        .ui.segment
          .field
            %label Tags
          .ui.labels
            - @tags.sort_by(&:name).each do |tag|
              - tags = Array.wrap(params[:tags]).clone
              - btn_class = tags.include?(tag.name) ? '' : 'basic'
              - tags = tags.concat([tag.name]) unless tags.delete(tag.name)
              = link_to tag.name, params.permit!.merge(:tags => tags), class: "ui #{btn_class} label"  
      -# .ui.segment
      -#   .ui.form
      -#     .grouped.fields
      -#       %label{ for: :match } Match
      -#       = params[:match]
      -#       .field
      -#         .ui.radio.checkbox
      -#           %input{ type: :radio,
      -#                   name: :match,
      -#                   checked: params[:match] != 'all' ? :checked : false,
      -#                   data: { url: url_for(params.permit!.merge(match: nil)) } }
      -#           %label Match Any Tags     
      -#       .field
      -#         .ui.radio.checkbox
      -#           %input{ type: :radio,
      -#                   name: :match,
      -#                   checked: params[:match] == 'all' ? :checked : false,
      -#                   data: { url: url_for(params.permit!.merge(match: :all)) } }
      -#           %label Match All Tags     

  .wide.column{ class: @show_tags ? :twelve : :sixteen }

    %table.ui.celled.table
      - events = @events.entries
      - if events.count == 0
        %tr
          %td No events scheduled
      - else
        - events.each do |event|
          - unless params[:tags]
            - if event.starts_on.to_date != last_date
              - reset_cycle()
              %tr.group-head
                %td{ colspan: 3, style: 'background-color: #f9fafb; color: #000; font-weight: bold;' }
                  = event.starts_on.to_date.strftime('%A, %B %e %Y')

          - unless params[:tags]
            %tr
              %td
                - if event.all_day?
                  = 'All Day'
                - unless event.all_day?
                  = event.starts_on.strftime('%l:%M %P')
                  - unless event.class.name == 'League::Game'
                    != ' - '
                    = event.ends_on.strftime('%l:%M %P')
              %td
                = icon(:lock, event.summary) if event.private?
                = event.summary unless event.private?
                - if current_user_is_admin?
                  .pull-right
                    .ui.dropdown
                      = semantic_icon :vertical, :ellipsis
                      .menu.left
                        = link_to 'Edit', edit_polymorphic_path([:admin, event.module_name, event]), class: [:item]
                        = link_to 'Clone', new_polymorphic_path([:admin, event.module_name, event.class], clone: event.id), class: [:item]
              %td
                - if event.location
                  .hidden-xs= event.location.name

          - if params[:tags]
            %tr
              %td
                %strong.summary
                  = event.summary
                  - if current_user_is_admin?
                    .pull-right
                      = link_to 'Edit', edit_polymorphic_path([:admin, event.module_name, event]), :class => 'btn btn-primary btn-xs'
                      != ' '
                      = link_to 'Clone', new_polymorphic_path([:admin, event.module_name, event.class], :clone => event.id), :class => 'btn btn-primary btn-xs'
                .logistics
                  = event.starts_on.to_date.strftime('%A, %B %e %Y')
                  %br
                  - if event.all_day?
                    = 'All Day'
                  - unless event.all_day?
                    = event.starts_on.strftime('%l:%M %P')
                    != ' - '
                    = event.ends_on.strftime('%l:%M %P')

          - last_date = event.starts_on.to_date

    - unless params[:tags] || events.count < 5
      .row
        .col-sm-12
          = render :partial => 'shared/select_date_range', :locals => { :start_date => @start_date, :end_date => @end_date, :prev_date => @prev_date, :next_date => @next_date, :range => @days_in_future + @days_in_past }
    - if params[:tags]
      .paginator= paginate @events    



:javascript
  $(function() {
    $('[data-url]').on('change', function(e) {
      var $el = $(e.target);
      window.location = $el.data('url');
    })
  });
