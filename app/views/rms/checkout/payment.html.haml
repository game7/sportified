- title 'Payment'

= simple_form_for registration, url: checkout_charge_registration_path(registration), remote: true do |f|
  = f.input :credit_card_id, as: :hidden
  = f.button :wrapped, 'Pay Now', cancel: return_url

- content_for :javascript do
  = javascript 'https://js.stripe.com/v3'  

-# = simple_form_for registration, url: checkout_charge_registration_path(registration) do |f|
-#   = f.input :credit_card_id, label: false, collection: credit_cards, as: :radio_buttons
-#   #new-card{ style: 'margin-left: 20px; padding-bottom: 20px;' }
-#     .six.wide.field
-#       %label{ for: "number" } Card Number
-#       %input#number.form-control{type: 'text', size: '20', data: { stripe: 'number' } }
-#     .two.wide.field
-#       %label{ for: "exp_month" } Expiration (MM/YY)
-#       .two.fields
-#         .field
-#           %input{type: 'text', data: { stripe: 'exp_month' }}
-#         .field
-#           %input{type: 'text', data: { stripe: 'exp_year' } }
-#     .one.wide.field
-#       %label{ for: "cvc" } CVC
-#       %input#cvc.form-control{type: 'text', size: '4', data: { stripe: 'cvc' } }
-#   = f.button :wrapped, 'Pay Now', :cancel => return_url

-# :css
-#   .radio.ui.checkbox {
-#     display: block;
-#     padding-top: 3px;
-#     padding-bottom: 3px;
-#   }

-# - content_for :javascript do
-#   = javascript 'https://js.stripe.com/v2'
-#   = javascript 'registrations'
-#   :javascript
-#     Stripe.setPublishableKey('#{stripe_public_api_key}');

-# - content_for :javascript do
-#   = javascript_pack_tag :application

-# = react_component('payment', { publishable_key: stripe_public_api_key }, { camelize_props: true })

-# = simple_form_for registration, url: checkout_charge_registration_path(registration) do |f|
-#   = f.input :credit_card_id do
-#     #card-element
-#   = f.button :submit

-# - content_for :javascript do
-#   = javascript 'https://js.stripe.com/v3'
-#   :javascript
-#     var stripe = Stripe('#{stripe_public_api_key}');
-#     var elements = stripe.elements();

-#     var style = {
-#       base: {
-#         color: '#32325d',
-#         fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
-#         fontSmoothing: 'antialiased',
-#         fontSize: '16px',
-#         '::placeholder': {
-#           color: '#aab7c4'
-#         }
-#       },
-#       invalid: {
-#         color: '#fa755a',
-#         iconColor: '#fa755a'
-#       }
-#     };    
-#     var card = elements.create('card', { style: style })
-#     card.mount('#card-element');

-#     var form = document.getElementById('edit_registration_#{registration.id}');
-#     form.addEventListener('submit', function(event) {
-#       event.preventDefault();

-#       stripe.createToken(card).then(function(result) {
-#         if (result.error) {
-#           // Inform the user if there was an error.
-#           var errorElement = document.getElementById('card-errors');
-#           errorElement.textContent = result.error.message;
-#         } else {
-#           // Send the token to your server.
-#           stripeTokenHandler(result.token);
-#         }
-#       });
-#     });  

-#     function stripeTokenHandler(token) {
-#       // Insert the token ID into the form so it gets submitted to the server
-#       var form = document.getElementById('payment-form');
-#       var hiddenInput = document.createElement('input');
-#       hiddenInput.setAttribute('type', 'hidden');
-#       hiddenInput.setAttribute('name', 'stripeToken');
-#       hiddenInput.setAttribute('value', token.id);
-#       form.appendChild(hiddenInput);

-#       // Submit the form
-#       form.submit();
-#     }      