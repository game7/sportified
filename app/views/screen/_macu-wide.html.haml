
:css

  @font-face {
      font-family: 'Sun Devil';
      src: url(#{font_path('SunDevilBold.eot')});
      src: url(#{font_path('SunDevilBold.eot?#iefix')}) format('embedded-opentype'),
          url(#{font_path('SunDevilBold.woff2')}) format('woff2'),
          url(#{font_path('SunDevilBold.woff')}) format('woff'),
          url(#{font_path('SunDevilBold.ttf')}) format('truetype');
      font-weight: bold;
      font-style: normal;
      font-display: swap;
  }

:scss

  html {
    height: 100%;
    width: 100%;
  }

  body {
    font-family: Roboto, Helvetica, sans-serif;
    height: 100%;
    width: 100%;
    background-image: url(#{image_url("themes/mpa/mpa_level2_bw.jpg")});
    background-position: center top;
    background-repeat:no-repeat;
    background-attachment: fixed;
    background-size: cover;
  }

  .outer {
    width: 100%;
    height: 100%;
    font-family: 'Rubik';
  }

  .header,
  .footer {
    height: 90px;
    background-color: #000;
  }
  
  .title {
    font-family: 'Sun Devil';
    text-align: center;
    font-size: 54px;
    height: 90px;
    line-height: 90px;
    color: #FFC627;
    font-weight: bold;
  }

  .footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
  } 

  .datetime, .logo {
    font-family: 'Rubik';
    font-weight: bold;
    font-size: 42px;
    line-height: 90px;
    color: white;
    margin-left: 20px;
    margin-right: 20px;
    color: #8E0C3A;
    color: #5B6770;
    color: #FFFFFF;
  }

  .main {
    height: calc(100% - 180px);
    padding: 10px 20px;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    gap: 5px;
  }


  .event {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    gap: 5px;

    .time,
    .summary,
    .team,
    .locker_room {
      background-color: #5B6770;
      background-color: #800000;
      background-color: #8C1D40;
      color: #f3f3f3;
      opacity: 1;
      font-weight: bold;
      height: 90px;
      line-height: 90px;
      font-size: 54px;
    }

    &.even {
      .time,
      .summary,
      .team,
      .locker_room {
        background-color: #FFC627;
        color: black;
      }
    }

    .time {
      padding-left: 10px !important;
      padding-right: 10px !important;
      width: 540px;
      height: 100%;
    }

    .summary {
      padding-left: 10px !important;
      flex-grow: 1;
    }

    .team {
      padding: 0;
      padding-left: 10px !important;
      height: 90px;
      flex-grow: 1;
    }

    .locker_room {
      text-align: center;
      vertical-align: middle;
      font-size: 54px;
      font-weight: 900;
      width: 90px;
      height: 90px;
      padding: 0;
    }

    .bench {
      float: right;
      margin-right: 10px;
    }

    .teams {
      flex-grow: 1;
      display: flex;
      flex-direction: column;
      gap: 5px;

    }

    .away_team, .home_team {
      flex-grow: 1;
      display: flex;
      flex-direction: row;
      gap: 5px;
    }

    .subject {
      padding: 0;
      flex-grow: 1;
      display: flex;
      flex-direction: row;
      gap: 5px;
    }

  }
 
  @media (max-width: 1200px) {
    .event {
      background-color: #33333399;
      padding: 5px;
      border-radius: 5px;
      gap: 0;

      .time {
        width: 100%;
        height: auto;
        font-size: 20px;
        line-height: 32px;
        margin-bottom: 5px;
      }

      .teams, .away_team, .home_team, .subject {
        gap: 0;
      }

      .home_team {
        margin-top: 5px;
      }

      .locker_room {
        margin-left: 5px;
      }
    }
  }

  @media (max-width: 900px) {
    .title {
      font-size: 48px;
    }
    .datetime, .logo {
      font-size: 32px;
    }
  }  



.outer
  .header
    .title Locker Room Assignments

  .main
    - rows = 0
    - @events.each do |event|
      - rows += 1
      - rows += 1 if event.try(:show_teams?)
      - next if rows > 9
      - odd_or_even = cycle('odd', 'even')
      .event{ class: odd_or_even }
        - if (event.try(:show_teams?))
          .time
            = event.starts_on.strftime('%-I:%M %P')
            != ' - '
            = event.ends_on.strftime('%-I:%M %P')
          .teams
            .away_team
              .team
                = event.away_team_name.presence || event.try(:away_team).try(:name)
                - if event.type == 'League::Game'
                  .bench (away)
              .locker_room.away= event.away_team_locker_room&.name
            .home_team
              .team
                = event.home_team_name.presence || event.try(:home_team).try(:name)
                - if event.type == 'League::Game'
                  .bench (home)
              .locker_room.home= event.home_team_locker_room&.name
        - else
          .time
            = event.starts_on.strftime('%-I:%M %P')
            != ' - '
            = event.ends_on.strftime('%-I:%M %P')
          .subject
            .summary= event.summary
            .locker_room.away= event.away_team_locker_room&.name
            .locker_room.home= event.home_team_locker_room&.name

  .footer
    .logo
      MACU Iceplex
    .datetime
      %span#date
        = "#{@time.strftime('%A, %b')} #{@time.strftime('%e').to_i.ordinalize}"
      != ' - '
      %span#time= @time.strftime('%l:%M %P')

:javascript
  $(function() {
    function pad(num) {
      return (num < 10 ? '0' : '') + num;
    }
    function getHour(date) {
      var hours = date.getHours();
      if (hours == 0) return 12;
      if (hours <= 12) return hours;
      return hours % 12;
    }
    function getMeridiem(date) {
      return date.getHours() < 12 ? 'am' : 'pm';
    }
    function formatTime(date) {
      var hour = getHour(date);
      var meridiem = getMeridiem(date);
      return hour + ':' + pad(date.getMinutes()) + ' ' + meridiem;
    }
    function setTime() {
      // console.log('gettin time')
      var date = new Date();
      $('#time').text(formatTime(new Date()));
    }
    function refresh() {
      var url = new URL(window.location)
      url.searchParams.set('width', document.documentElement.clientWidth)
      url.searchParams.set('height', document.documentElement.clientHeight)
      $.ajax(url.toString()).then(function(data, status) {
        var $page = $(data);
        $('.outer').replaceWith($page.filter('.outer'));
      })
    }
    // reload the entire page but do so only if the server is reponding
    function reload() {
      var url = new URL(window.location)
      $.ajax(url.toString()).then(function(data, status) {
        window.location.reload()
      })      
    }
    
    // update the time every second
    window.setInterval(setTime, 1000)
    
    // update the schedule eveery 5 minutes
    window.setInterval(refresh, 5 * 60 * 1000)
    
    // completely reload the window every hour (actually 100ms before)
    window.setInterval(reload, (60 * 60 * 1000) - 100)
  })
