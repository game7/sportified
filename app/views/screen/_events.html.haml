:css

  body {
    font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji";
    padding: 0;
    margin: 0;    
  }

  .outer {
    width: 100%;
    height: 100%;
    font-family: 'Rubik';
  }

  .header,
  .footer {
    height: 90px;
    background-color: #000;
  }

  .main {
    height: 900px;
    padding: 10px;
    box-sizing: border-box;
    overflow: hidden;
  }


  .event {
    margin-bottom: 5px;
    display: flex;
  }

  .time,
  .summary,
  .team,
  .locker_room {
    background-color: maroon;
    color: white;
    opacity: 1;
    font-weight: bold;
    height: 90px;
    line-height: 90px;
    font-size: 54px;
  }

  .even .time ,
  .even .summary,
  .even .team,
  .even .locker_room {
    background-color: #FFC627;
    color: black;
  }

  .time {
    text-align: left;
    padding-left: 10px !important;
    padding-right: 10px !important;
    width: 570px;
    margin-right: 5px;
  }
  .time.teams {
    height: 185px;
  }

  .summary {
    padding-left: 10px !important;
    margin-right: 5px;
    width: 1110px;
  }

  .team {
    padding: 0;
    padding-left: 10px !important;
    margin-right: 5px;
    height: 90px;
    width: 1205px;
  }

  .locker_room {
    text-align: center;
    vertical-align: middle;
    font-size: 54px;
    font-weight: 900;
    width: 90px;
    height: 90px;
    padding: 0;
  }

  .away_team {
    margin-bottom: 5px;
  }

  .bench {
    float: right;
    margin-right: 10px;
  }

  .subject {
    padding: 0;
  }
  .subject .summary,
  .subject .locker_room {
    float: left;
  }

  .subject .summary .away,
  .subject .locker_room .away{
    margin-right: 5px;
  }

  .title {
    text-align: center;
    font-size: 54px;
    height: 90px;
    line-height: 90px;
    color: white;
    background-color: #5C6670;
    background-color: black;
    font-weight: bold;
  }


  .footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }  

  .datetime {
    font-size: 42px;
    line-height: 90px;
    color: white;
    margin-right: 20px;
  }

  .logo {
    margin-left: 20px;
  }

  .logo img {
    height: 42px;
  }


.outer
  .header
    .title Locker Room Assignments

  .main
    - rows = 0
    - @events.each do |event|
      - rows += 1
      - rows += 1 if event.try(:show_teams?)
      - next if rows > 9
      - odd_or_even = cycle('odd', 'even')
      .event{ class: odd_or_even }
        - if (event.try(:show_teams?))
          .time.teams
            = event.starts_on.strftime('%-I:%M %P')
            != ' - '
            = event.ends_on.strftime('%-I:%M %P')
          .teams
            .away_team
              .team
                = event.away_team_name.presence || event.try(:away_team).try(:name)
                - if event.type == 'League::Game'
                  .bench (away)
              .locker_room.away= event.away_team_locker_room&.name
            .home_team
              .team
                = event.home_team_name.presence || event.try(:home_team).try(:name)
                - if event.type == 'League::Game'
                  .bench (home)
              .locker_room.home= event.home_team_locker_room&.name
        - else
          .time
            = event.starts_on.strftime('%-I:%M %P')
            != ' - '
            = event.ends_on.strftime('%-I:%M %P')
          .subject
            .summary= event.summary
            .locker_room.away= event.away_team_locker_room&.name
            .locker_room.home= event.home_team_locker_room&.name

  .footer
    .logo
      = image_tag('themes/oia/oia_white.svg')
    .datetime
      %span#date
        = "#{@time.strftime('%A, %b')} #{@time.strftime('%e').to_i.ordinalize}"
      != ' - '
      %span#time= @time.strftime('%l:%M %P')

:javascript
  $(function() {
    function pad(num) {
      return (num < 10 ? '0' : '') + num;
    }
    function getHour(date) {
      var hours = date.getHours();
      if (hours == 0) return 12;
      if (hours <= 12) return hours;
      return hours % 12;
    }
    function getMeridiem(date) {
      return date.getHours() < 12 ? 'am' : 'pm';
    }
    function formatTime(date) {
      var hour = getHour(date);
      var meridiem = getMeridiem(date);
      return hour + ':' + pad(date.getMinutes()) + ' ' + meridiem;
    }
    function setTime() {
      // console.log('gettin time')
      var date = new Date();
      $('#time').text(formatTime(new Date()));
    }
    function refresh() {
      console.log('refreshing');
      $.ajax(window.location).then(function(data, status) {
        var $page = $(data);
        $('.outer').replaceWith($page.filter('.outer'));
      })
    }
    window.setInterval(setTime, 1000)
    window.setInterval(refresh, 5 * 60 * 1000)
  })
