= simple_form_for [:admin, :league, @game] do |f|
  - if %w{new create edit update}.include? params[:action]
    .ui.segment
      %h4.ui.header LOGISTICS   
      .fields
        = f.input :program_id, as: :select, collection: @options[:programs], wrapper_html: { class: [:four, :wide] }
        = f.input :season_id, as: :select, collection: @options[:seasons][@game.program_id], wrapper_html: { class: [:four, :wide] }
        = f.input :division_id, as: :select, collection: @options[:divisions][@game.program_id], wrapper_html: { class: [:four, :wide] }
      .fields
        = f.input :starts_on, as: :datetime, html5: true, wrapper_html: { class: [:four, :wide] }
        = f.input :duration, wrapper_html: { class: [:two, :wide] }
      .fields      
        = f.input :location_id, as: :select, collection: @options[:locations], wrapper_html: { class: [:four, :wide] }
        = f.input :playing_surface_id, as: :select, collection: @options[:playing_surfaces][@game.location_id], wrapper_html: { class: [:four, :wide] }

  .ui.grid.two.columns
    .column
      .ui.segment
        %h4.ui.header AWAY TEAM
        = f.input :away_team_id, as: :select, collection: @options[:teams]
        = f.input :away_team_custom_name, as: :boolean
        = f.input :away_team_name
        = f.input :away_team_locker_room_id, as: :select, collection: @options[:locker_rooms][@game.location_id] || []
    .column
      .ui.segment
        %h4.ui.header HOME TEAM
        = f.input :home_team_id, as: :select, collection: @options[:teams]
        = f.input :home_team_custom_name, as: :boolean
        = f.input :home_team_name
        = f.input :home_team_locker_room_id, as: :select, collection: @options[:locker_rooms][@game.location_id] || []

  .ui.segment
    %h4.ui.header DISPLAY
    .two.fields
      = f.input :text_before
      = f.input :text_after

  .ui.segment
    = f.button :wrapped, :cancel => return_url

- if @game.persisted?
  %br
  %br
  .ui.segment
    %h4.ui.header HISTORY
    %table.ui.celled.striped.table
      %thead
        %tr
          %th Time
          %th Action
          %th User
          %th Changes
      %tbody
        - @game.audits.each do |audit|
          %tr
            %td= "#{time_ago_in_words(audit.created_at)} ago"
            %td= audit.action
            %td= audit&.user&.full_name
            %td
              - if audit.action == 'update'
                %table.ui.celled.table
                  %thead
                    %tr
                      %th{ style: 'width: 40%;' } Attribute
                      %th{ style: 'width: 30%;' } From
                      %th{ style: 'width: 30%;' } To
                  %tbody
                    - audit.audited_changes.each do |attr, change|
                      %tr
                        %td= attr.humanize
                        %td= change[0]
                        %td= change[1]  

- content_for :javascript do
  :javascript

    $(function() {
      var seasons = JSON.parse('#{raw @options[:seasons].to_json}');
      var divisions = JSON.parse('#{raw @options[:divisions].to_json}');
      var playing_surfaces = JSON.parse('#{raw @options[:playing_surfaces].to_json}');
      var locker_rooms = JSON.parse('#{raw @options[:locker_rooms].to_json}');
      var teams_path = '#{admin_teams_path}?season_id={{season}}&division_id={{division}}';

      function bindOptions($select, options) {
        $select.html(options.map(function(opt){ return `<option value="${opt.value}">${opt.name}</option>`}))              
        $select.closest('.dropdown').dropdown('change values', {
          values: options
        })
      }         

      function bindTeams() {
        var $homeTeams = $('#game_home_team_id')
        var $awayTeams = $('#game_away_team_id')
        var seasonId = $('#game_season_id').closest('.dropdown').dropdown('get value');
        var divisionId = $('#game_division_id').closest('.dropdown').dropdown('get value');
        if(!seasonId || !divisionId) {
          bindOptions($homeTeams, [])            
          bindOptions($awayTeams, []) 
          return;
        }
        var url = teams_path.replace('{{season}}', seasonId).replace('{{division}}', divisionId);
        $.getJSON(url, function(data) {
          var options = (data || []).map(function(s) { return { name: s.name, value: s.id }});
          bindOptions($homeTeams, options)            
          bindOptions($awayTeams, options)            
        })
      }     

      function bindPlayingSurfaces() {
        var locationId =  $('#game_location_id').closest('.dropdown').dropdown('get value');
        var $select = $('#game_playing_surface_id');
        var options = (playing_surfaces[locationId] || []).map(function(s) { return { name: s.name, value: s.id }});
        bindOptions($select, options)            
      } 

      function bindLockerRooms() {
        var $awayTeamLockerRooms = $('#game_away_team_locker_room_id');
        var $homeTeamLockerRooms = $('#game_home_team_locker_room_id');
        var locationId =  $('#game_location_id').closest('.dropdown').dropdown('get value');
        var options = (locker_rooms[locationId] || []).map(function(s) { return { name: s.name, value: s.id }});
        bindOptions($awayTeamLockerRooms, options)          
        bindOptions($homeTeamLockerRooms, options)          
      }       

      function bindSeasons() {
        var programId = $('#game_program_id').closest('.dropdown').dropdown('get value');
        var $select = $('#game_season_id');
        var options = (seasons[programId] || []).map(function(s) { return { name: s.name, value: s.id }});
        bindOptions($select, options)        
      }

      function bindDivisions() {
        var programId = $('#game_program_id').closest('.dropdown').dropdown('get value');        
        var $select = $('#game_division_id');
        var options = (divisions[programId] || []).map(function(s) { return { name: s.name, value: s.id }});
        bindOptions($select, options)        
      }

      function onProgramChange() {
        bindSeasons();
        bindDivisions();
      }     

      function onSeasonChange() {
        bindTeams();
      } 

      function onDivisionChange() {
        bindTeams();
      }

      function onLocationChange() {
        bindPlayingSurfaces();
        bindLockerRooms();
      }


      (function initialize() {
        $('#game_program_id').closest('.dropdown').dropdown({
          onChange: onProgramChange
        })
        $('#game_season_id').closest('.dropdown').dropdown({
          onChange: onSeasonChange
        })
        $('#game_division_id').closest('.dropdown').dropdown({
          onChange: onDivisionChange
        })
        $('#game_location_id').closest('.dropdown').dropdown({
          onChange: onLocationChange
        })
      })()

    });
    
    $(function(){
      if( !$('#game_away_team_custom_name').attr('checked') ) { $('#game_away_team_name').closest('.field').hide() }
      if( !$('#game_home_team_custom_name').attr('checked') ) { $('#game_home_team_name').closest('.field').hide() }
      $('#game_away_team_custom_name').change(function(){
        $('#game_away_team_name').closest('.field').slideToggle();
      });
      $('#game_home_team_custom_name').change(function(){
        $('#game_home_team_name').closest('.field').slideToggle();
      });
    });

