
%h3 Player Statistics
%table.table.table-striped.table-bordered
  %thead
    %tr
      %th DATE
      %th OPPONENT
      %th.span1 G
      %th.span1 A
      %th.span1 PTS
      %th.span1 PEN
      %th.span1 PIM
      %th.span1 MNR
      %th.span1 MJR
      %th.span1 MSC
      %th.span1 GAME      
    %tbody
      - Hockey::Skater::Result.where('player_id = ?', @player.id).includes(:game).order('events.starts_on').each do |result|
        %tr
          %td= result.game.starts_on.to_date.strftime("%-m/%d/%y")
          %td= result.game.opponent_name(result.team)
          - if result.games_played == 1
            %td= result.goals
            %td= result.assists
            %td= result.points
            %td= result.penalties
            %td= result.penalty_minutes
            %td= result.minor_penalties
            %td= result.major_penalties
            %td= result.misconduct_penalties
            %td= result.game_misconduct_penalties            
          - if result.games_played == 0
            %td{ :colspan => 9 } Did Not Play

%h3 Goaltending Statistics
%table.table.table-striped.table-bordered
  %thead
    %tr
      %th DATE
      %th OPPONENT
      %th.span1 TOI
      %th.span1 SA
      %th.span1 GA
      %th.span1 SV
      %th.span1 SV%
    %tbody
      - Hockey::Goaltender::Result.where('player_id = ?', @player.id).each do |result|
        - if result.g_gp == 1
          %tr
            %td= #result.played_on.to_date.strftime("%-m/%d/%y")
            %td= #result.opponent_name
            %td= result.g_toi
            %td= result.g_sa
            %td= result.g_ga
            %td= result.g_sv
            %td= number_with_precision result.g_svp, :precision => 3